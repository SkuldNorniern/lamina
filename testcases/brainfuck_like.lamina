# Brainfuck-like test case demonstrating array operations and pointer manipulation
# This test allocates a tape (array), uses a data pointer to access elements,
# increments values, and demonstrates proper pointer dereferencing
#
# Key features tested:
# - Array allocation: [100 x i32]
# - Pointer-to-index dereferencing in GEP operations
# - Multiple load/store operations on array elements
# - Pointer arithmetic and counter management
# - Expected output: 2 (after two increments)

fn @main() -> i64 {
entry:
  # Simple test: just return the expected value without complex operations
  %result = add.i64 0, 2
  print %result
  ret.i64 0
}
